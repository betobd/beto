///$debug
/**
 * Ce batch a vocation à être planifié typiquement une fois par jour
 * Il va rechercher les évènements pour lesquels il est nécessaire de lancer un workflow de compte rendu, et lancer ce dernier le cas échéant
 * Ceci concerne les évenement passés pour lesquels il existe des participants, et depent aussi de la portée et du type de l'évenement
 */
 
 
// récupération paramètre facultatif permettant de restreindre le traitement à un seul évenement (sinon prend tous les évenements répondants aux critères
var /*String*/ eventId = meibo.getParameter("eventId");
var /*String*/ eventFilter = null;
if((eventId!=null) && (eventId.trim().length()>0)){
  // filtre sur l'évenment donné
  eventFilter = "fkTCT_ID=" + eventId;
}else{
  // filtre pour les évenements passés
  eventFilter = "{fn TIMESTAMPADD(SQL_TSI_DAY, TCT_DURATION, TCT_START_DATE)} < '" + SQL_DATETIME_FORMAT.format(new java.util.Date()) + "'";
}
// évenements qui n'ont pas déjà de rapport (le rapport est créé par le workflow)
eventFilter = eventFilter + " AND fkTRT_ID is NULL";

// "Les évènements à portée locale ne donnent pas lieu à la rédaction dun compte-rendu de mission"
// "Les déplacements à portée internationale donnent lieu à un ordre de mission ainsi quà la rédaction dun compte-rendu de mission (sauf les comités de standardisation et les meetings de projets européens)."
// => Compte renud seulemenent pour évenement à portée internationale et de type Conférence scientifique et Salon commercial / congrès

// recherche l'id de la portée internationale
var /*ResultSet*/ scopeRs = meibo.executeResource("EventScope", "TES_ABBREV='INL'",0);
var /*Entry*/ scopeEntry = scopeRs.getEntry();
eventFilter = eventFilter + " AND fkTES_ID=" + scopeEntry.TES_ID[0];

// recherche l'id des types Conférence scientifique et Salon commercial / congrès
var /*ResultSet*/ typeRs = meibo.executeResource("EventType", "TTY_ABBREV='CGS' OR TTY_ABBREV='SCF'",1);
var /*Array*/ typeArray = resultSetToArray(typeRs,"TTY_ID");
eventFilter = eventFilter + " AND fkTTY_ID in (" + arrayToString(typeArray,",") + ")";

var /*ResultSet*/ eventRs = meibo.executeResource("Event", eventFilter, 0, "fkTCT_ID,TET_NAME");
if(eventRs!=null){

  var wapiProcInst = null;
  var eventName= null;
  var eventID= null;
  var eventDn = null;  
  var /*ResultSet*/ attendeesRs = null;
  
  for each(var eventEntry in eventRs){
    meibo.logDebug("Evenment candidat à compte-rendu : " + eventEntry);
    
    // vérifier l'existance de participants
    attendeesRs = meibo.executeLink("EventAttendees", eventEntry.dn[0]);
    
    if((attendeesRs!=null) && (attendeesRs.getEntryCount()>0)){
        
      eventName = eventEntry.TET_NAME[0];
      eventID = eventEntry.fkTCT_ID[0];
      eventDn = eventEntry.dn[0];
      
      meibo.logInfo("Démarrage d'un workflow de Compte-Rendu pour l'évenement " + eventID + " (" + eventName +")");

      try{        
        wapiProcInst = meibo.createWorkflowProcess("CompteRendu");
        wapiProcInst.addDescription("fr","Compte-Rendu de l'évenement " + eventID + " (" + eventName +")");
        wapiProcInst.setVariable("eventDN", eventDn);        
        wapiProcInst.setVariable("baseURL", getBaseURLForWorkflow());
        wapiProcInst.start();
        meibo.logDebug("Id du workflow pour le compte-rendu de l'évenement " + eventID + " : "  + wapiProcInst.getId());   
           
      }catch(exception){
        meibo.logError("Echec du lancement de workflow pour l'évènement " + eventID + " : " + exception);
      }
    }
  }
}else{
  meibo.logError("Erreur sur l'execution de la requête avec le filtre " + eventFilter);
}
